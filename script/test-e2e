#!/bin/bash

set -e

# Drop database for target, recreate database and test schema
docker-compose run --rm postgres psql -h postgres -U postgres postgres  -c "DROP DATABASE IF EXISTS postgres2;"
docker-compose run --rm postgres psql -h postgres -U postgres postgres  -c "CREATE DATABASE postgres2;"
docker-compose run --rm postgres psql -h postgres -U postgres postgres2 -c "CREATE SCHEMA test;"
docker-compose run --rm postgres psql -h postgres -U postgres postgres  -c "
DROP SCHEMA IF EXISTS public CASCADE;
DROP SCHEMA IF EXISTS teleport CASCADE;
CREATE SCHEMA public;
"

# Insert test data
docker-compose run --rm postgres psql -h postgres -U postgres postgres -c "
DROP TABLE IF EXISTS test_table;
CREATE TYPE test_enum AS ENUM ('red', 'green', 'blue');

CREATE TABLE test_table (id SERIAL PRIMARY KEY, content TEXT, obj JSON, color test_enum);

INSERT INTO test_table (content, obj, color) VALUES ('asdasd', '{\"testing_this\":\"lol\"}'::json, 'red');
INSERT INTO test_table (content, obj) VALUES ('asdasd2', '{\"testing_this2\":\"lol2\"}'::json);

CREATE OR REPLACE FUNCTION test_func() RETURNS INTEGER AS \$\$
BEGIN
	RETURN 1;
END;
\$\$ LANGUAGE plpgsql;
"

# Start teleport source/target
# docker-compose up -d source target
docker-compose up -d source target

# Wait for source and target servers to be up and running
docker-compose run --rm source bash <<EOF
wait_http() {
	until curl --fail --silent \$1 > /dev/null 2>&1;
	do sleep 0.5; done
}

echo Waiting for source
wait_http http://source:3000/status

echo Waiting for target
wait_http http://target:3001/status
EOF

# Run initial load
docker-compose run --rm source teleport -config tmp/source_config.yml -mode initial-load -load-target my_target

# Modify schema
docker-compose run --rm postgres psql -h postgres -U postgres postgres -c "
ALTER TABLE test_table ADD COLUMN num INT;
ALTER TABLE test_table DROP COLUMN content;
CREATE OR REPLACE FUNCTION test_func() RETURNS INTEGER AS \$\$
BEGIN
	RETURN 2;
END;
\$\$ LANGUAGE plpgsql;
"

# Alter ENUM
docker-compose run --rm postgres psql -h postgres -U postgres postgres -c "ALTER TYPE test_enum ADD VALUE 'yellow';"

# Wait DDL replication
sleep 2

# Insert test data
docker-compose run --rm postgres psql -h postgres -U postgres postgres -c "
DELETE FROM test_table WHERE id = 2;
INSERT INTO test_table (obj, num) VALUES ('{\"testing_this4\":true}'::json, 126);
UPDATE test_table SET color = 'green';
INSERT INTO test_table (obj, num, color) VALUES ('{\"testing_this3\":0}'::json, 125, 'yellow');
"

# Get output from source
docker-compose run --rm postgres psql -h postgres -U postgres postgres -c "
SELECT * FROM test_table ORDER BY 1;
SELECT test_func();
" > /tmp/source_diff.txt

# And compare to target
docker-compose run --rm postgres psql -h postgres -U postgres postgres2 -c "
SELECT * FROM test.test_table ORDER BY 1;
SELECT test.test_func();
" > /tmp/target_diff.txt

diff /tmp/source_diff.txt /tmp/target_diff.txt
